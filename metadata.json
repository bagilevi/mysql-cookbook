{
    "version": "1.0.3",
    "maintainer_email": "cookbooks@opscode.com",
    "groupings": {
    },
    "attributes": {
      "mysql/server_root_password": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "randomly generated",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Server Root Password",
        "description": "Randomly generated password for the mysqld root user"
      },
      "mysql/tunable/max_heap_table_size": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "32M",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Tunable Max Heap Table Size"
      },
      "mysql/datadir": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "/var/lib/mysql",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Data Directory",
        "description": "Location of mysql databases"
      },
      "mysql/bind_address": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "ipaddress",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Bind Address",
        "description": "Address that mysqld should listen on"
      },
      "mysql/tunable/back_log": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "128",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Tunable Back Log"
      },
      "mysql/tunable/wait_timeout": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "180",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Tunable Wait Timeout"
      },
      "mysql/tunable/net_read_timeout": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "30",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Tunable Net Read Timeout"
      },
      "mysql/tunable/max_connections": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "800",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Tunable Max Connections"
      },
      "mysql/tunable/table_open_cache": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "128",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Tunable Table Cache for MySQL >= 5.1.3"
      },
      "mysql/tunable/table_cache": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "128",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Tunable Table Cache for MySQL < 5.1.3"
      },
      "mysql/tunable": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "type": "hash",
        "recipes": [

        ],
        "display_name": "MySQL Tunables",
        "description": "Hash of MySQL tunable attributes"
      },
      "mysql/ec2_path": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "/mnt/mysql",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL EC2 Path",
        "description": "Location of mysql directory on EC2 instance EBS volumes"
      },
      "mysql/tunable/net_write_timeout": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "30",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Tunable Net Write Timeout"
      },
      "mysql/tunable/key_buffer": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "default": "250M",
        "type": "string",
        "recipes": [

        ],
        "display_name": "MySQL Tuntable Key Buffer"
      }
    },
    "recommendations": {
    },
    "dependencies": {
      "openssl": [

      ]
    },
    "description": "Installs and configures mysql for client or server",
    "suggestions": {
    },
    "long_description": "Description\n===========\n\nInstalls and configures MySQL client or server.\n\nRequirements\n============\n\nPlatform\n--------\n\n* Debian, Ubuntu\n* CentOS, Red Hat, Fedora\n\nCookbooks\n---------\n\nRequires Opscode's openssl cookbook for secure password generation.\n\nRequires a C compiler and Ruby development package in order to build mysql gem with native extensions. On Debian and Ubuntu systems this is satisfied by installing the \"build-essential\" and \"ruby-dev\" packages before running Chef. See USAGE below for information on how to handle this during a Chef run.\n\nResources and Providers\n=======================\n\nThe cookbook contains a LWRP, `mysql_database` which can be used to manage databases through calls to the MySQL API. The mysql gem is installed to make this usable. The provider currently supports three actions:\n\n* `flush_tables_with_read_lock` - sends the sql command \"flush tables with read lock\", used for setting up mysql master/slave replication.\n* `unflush_tables` - sends the sql command \"unflush tables\", used for setting up master/slave replication.\n* `create_db` - specify a database to be created, optionally: charset, collate\n* `create_user` - specify a new_username, new_password, optionally: `grant 'all'`\n* `query` - send an arbitrary query to the database, this should be used with care. Pass the SQL statement to use with the `sql` resource attribute.\n\nFor example see the USAGE section below.\n\nAttributes\n==========\n\n* `mysql[:server_root_password]` - Set the server's root password with this, default is a randomly generated password with `OpenSSL::Random.random_bytes`.\n* `mysql[:server_repl_password]` - Set the replication user 'repl' password with this, default is a randomly generated password with `OpenSSL::Random.random_bytes`.\n* `mysql[:server_debian_password]` - Set the debian-sys-maint user password with this, default is a randomly generated password with `OpenSSL::Random.random_bytes`.\n* `mysql[:bind_address]` - Listen address for MySQLd, default is node's ipaddress.\n* `mysql[:datadir]` - Location for mysql data directory, default is \"/var/lib/mysql\"\n* `mysql[:ec2_path]` - location of mysql datadir on EC2 nodes, default \"/mnt/mysql\"\n\nPerformance tuning attributes, each corresponds to the same-named parameter in my.cnf; default values listed\n\n* `mysql[:tunable][:key_buffer]`          = \"250M\"\n* `mysql[:tunable][:max_connections]`     = \"800\"\n* `mysql[:tunable][:wait_timeout]`        = \"180\"\n* `mysql[:tunable][:net_write_timeout]`   = \"30\"\n* `mysql[:tunable][:net_write_timeout]`   = \"30\"\n* `mysql[:tunable][:back_log]`            = \"128\"\n* `mysql[:tunable][:table_cache]`         = \"128\"\n* `mysql[:tunable][:max_heap_table_size]` = \"32M\"\n\nUsage\n=====\n\nOn client nodes,\n\n    include_recipe \"mysql::client\"\n\nThis will install the MySQL client libraries and development headers on the system. It will also install the Ruby Gem `mysql`, so that the cookbook's LWRP (above) can be used. This is done during the compile-phase of the Chef run. On platforms that are known to have a native package (currently Debian, Ubuntu, Red hat, Centos, Fedora and SUSE), the package will be installed. Other platforms will use the RubyGem.\n\nThis creates a resource object for the package and does the installation before other recipes are parsed. You'll need to have the C compiler and such (ie, build-essential on Ubuntu) before running the recipes, but we already do that when installing Chef :-). If you want to be able to access a MySQL database via Ruby within another recipe, you could do so, like so:\n\n    mysql_database \"create application_production database\" do\n      host \"localhost\"\n      username \"root\"\n      password node[:mysql][:server_root_password]\n      database \"application_production\"\n      action :create_db\n    end\n\nThis will connect to the MySQL server running on localhost as \"root\" and password as `mysql[:server_root_password]` attribute (see below) and create the database specified with the `database` parameter. The provider will attempt to determine whether the database exists first.\n\nOn server nodes,\n\n    include_recipe \"mysql::server\"\n\nOn Debian and Ubuntu, this will preseed the mysql-server package with the randomly generated root password from the attributes file. On other platforms, it simply installs the required packages. It will also create an SQL file, /etc/mysql/grants.sql, that will be used to set up grants for the root, repl and debian-sys-maint users.\n\nOn EC2 nodes,\n\n    include_recipe \"mysql::server_ec2\"\n\nWhen the `ec2_path` doesn't exist we look for a mounted filesystem (eg, EBS) and move the datadir there.\n\nThe client recipe is already included by server and 'default' recipes.\n\nFor more infromation on the compile vs execution phase of a Chef run:\n\n* http://wiki.opscode.com/display/chef/Anatomy+of+a+Chef+Run\n\nLicense and Author\n==================\n\nAuthor:: Joshua Timberman (<joshua@opscode.com>)\nAuthor:: AJ Christensen (<aj@opscode.com>)\nAuthor:: Seth Chisamore (<schisamo@opscode.com>)\n\nCopyright:: 2009-2011 Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
    "conflicting": {
    },
    "recipes": {
      "mysql": "Includes the client recipe to configure a client",
      "mysql::client": "Installs packages required for mysql clients using run_action magic",
      "mysql::server_ec2": "Performs EC2-specific mountpoint manipulation",
      "mysql::server": "Installs packages required for mysql servers w/o manual intervention"
    },
    "providing": {
    },
    "name": "mysql",
    "maintainer": "Opscode, Inc.",
    "replacing": {
    },
    "platforms": {
      "debian": [

      ],
      "fedora": [

      ],
      "centos": [

      ],
      "suse": [

      ],
      "ubuntu": [

      ],
      "redhat": [

      ]
    },
    "license": "Apache 2.0"
  }